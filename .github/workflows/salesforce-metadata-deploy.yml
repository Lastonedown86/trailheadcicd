name: Salesforce Metadata Deploy

on:
  workflow_call:
    inputs:
      dry-run:
        description: "Validate deploy and run Apex tests but don't save to the org."
        type: boolean
      wait:
        description: "Number of minutes to wait for command to complete and display results."
        type: number
        default: 30
      environment-name:
        description: "Environment Name"
        required: true
        type: string
      sfdx-auth-url:
        description: "SFDX Auth Url"
        required: true
        type: string
      test-level:
        description: "Deployment Apex testing level."
        type: choice
        default: RunLocalTests
        options:
          - NoTestRun
          - RunSpecifiedTests
          - RunLocalTests
          - RunAllTestsInOrg
  jobs:
    validate:
      runs-on: ubuntu-latest
      environment:
        name: ${{ inputs.environment-name }}
      steps:
          - name: Checkout code
            uses: actions/checkout@v4
            with:
              fetch-depth: 0

          - name: Set up Node.js
            uses: actions/setup-node@v4
            with:
              node-version: lts/*

          - name: Install Salesforce CLI
            run: |
              npm install @salesforce/cli --global

          - name: Installing sfdx git delta
            run: |
              echo y | sf plugins install sfdx-git-delta
              sf plugins

          - name: Authenticate to Org
            run: sf org login sfdx-url --set-default --sfdx-url-file <(echo "${{ inputs.sfdx-auth-url }}")

          - name: Create delta packages for new, modified or deleted metadata
            run: |
              mkdir changed-sources
              sf sgd:source:delta --from "HEAD~1" --output-dir changed-sources/ --generate-delta --source-dir force-app/

          - name: Upload changed-sources folder as artifact
            uses: actions/upload-artifact@v4
            with:
              name: changed-sources
              path: changed-sources

          - name: Deploy to Environment
            run: |
              deployFlags=(
                --manifest changed-sources/package/package.xml
                --post-destructive-changes changed-sources/destructiveChanges/destructiveChanges.xml
                --wait ${{ inputs.wait }}
                --test-level ${{ inputs.test-level }}
                --verbose
                )
              if [ "${{ inputs.dry-run }}" = "true" ]; then
                  deployFlags+=( --dry-run )
              sf project deploy start "${deployFlags[@]}"
